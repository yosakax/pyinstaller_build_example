name: push
on: push

jobs:
  windows-build:
    runs-on: windows-latest
    steps:
      - name: Checkout commit
        uses: actions/checkout@master

      - name: Set up Python 3.8
        uses: actions/setup-python@master
        with: { python-version: 3.8 }

      - name: Upgrade pip
        run: python -m pip install --upgrade pip PyInstaller

      - name: build
        run: pyinstaller -F main.py

      - name: upload
        uses: actions/upload-artifact@v1
        with:
          name: sample-windows
          path: dist/main.exe

  macOS-build:
    runs-on: macOS-latest
    steps:
      - name: Checkout commit
        uses: actions/checkout@master

      - name: Set up Python 3.8
        uses: actions/setup-python@master
        with: { python-version: 3.8 }

      - name: Upgrade pip
        run: python -m pip install --upgrade pip PyInstaller

      - name: build
        run: pyinstaller -F main.py

      - name: upload
        uses: actions/upload-artifact@v1
        with:
          name: sample-macos
          path: dist/main

  ubuntu-build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout commit
        uses: actions/checkout@master

      - name: Set up Python 3.8
        uses: actions/setup-python@master
        with: { python-version: 3.8 }

      - name: Upgrade pip
        run: python -m pip install --upgrade pip PyInstaller

      - name: build
        run: pyinstaller -F main.py

      - name: upload
        uses: actions/upload-artifact@v1
        with:
          name: sample-linux
          path: dist/main

  release:
    needs: [ubuntu-build, macOS-build, windows-build]
    runs-on: ubuntu-latest

    steps:
      - name: Download Linux
        uses: actions/download-artifact@v1
        with:
          name: sample-linux

      - name: Download Mac
        uses: actions/download-artifact@v1
        with:
          name: sample-macos

      - name: Download Windows
        uses: actions/download-artifact@v1
        with:
          name: sample-windows

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets._GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Zip
        run: |
          ls ./
          tar -C sample-macos -pczvf sample-macos.tar.gz main
          tar -C sample-linux -pczvf sample-linux.tar.gz main
          zip --junk-paths sample-windows ./sample-windows/main.exe
      - name: Append Binary
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets._GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./sample-macos.tar.gz
          asset_name: sample-macos.tar.gz
          asset_content_type: application/gzip

      - name: Append Binary
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets._GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./sample-linux.tar.gz
          asset_name: sample-linux.tar.gz
          asset_content_type: application/gzip

      - name: Append Binary
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets._GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./sample-windows.zip
          asset_name: sample-windows.zip
          asset_content_type: application/zip
